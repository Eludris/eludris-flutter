name: Build, Lint, and Deploy

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  cache:
  # This job caches the pub cache and flutter dependencies to speed up the build process
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Cache Flutter Dependencies
        id: cache-flutter-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}-pub-cache

      - name: Install Packages
        if: steps.cache-flutter-dependencies.outputs.cache-hit != 'true'
        run: flutter pub get

  build:
    needs: cache
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        command: [apk, web, windows, linux]
        include:
          - command: apk
            os: ubuntu-latest
            upload: ./build/app/outputs/flutter-apk/app-release.apk
          - command: web
            os: ubuntu-latest
            upload: ./build/web
          - command: linux
            os: ubuntu-latest
            upload: ./build/linux/x64/release/bundle
          - command: windows
            os: windows-latest
            upload: ./build/windows/runner/Release/
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        if: matrix.command == 'apk' # Only needed for Android
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install dependencies
        if: matrix.command == 'linux' # Only needed for Linux
        run: |
          sudo apt-get install \
              cmake \
              clang \
              ninja-build \
              libgtk-3-dev \
              liblzma-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Load Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}-pub-cache

      - name: Build ${{ matrix.command }}
        run: flutter build ${{ matrix.command }} --release

      - name: Upload ${{ matrix.command }}
        uses: actions/upload-artifact@v2
        with:
          name: eludris-${{ matrix.command }}
          path: ${{ matrix.upload }}

  lint:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Load Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}-pub-cache

      - name: Lint
        run: flutter analyze

  deploy-web:
    env:
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
    runs-on: ubuntu-latest
    needs: [build, lint]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        if: ${{ env.CF_API_TOKEN != '' }}
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"

      - name: Download Web Build
        uses: actions/download-artifact@v2
        with:
          name: eludris-web
          path: ./build/web

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN  }}
          command: pages publish --skip-caching --project-name=eludris-flutter-web --branch=main ./build/web